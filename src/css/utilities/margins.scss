// Unified margin utility generator

$margin-directions: (
  m: margin,
  mx: margin-inline,
  my: margin-block,
  mt: margin-block-start,
  mb: margin-block-end,
  ms: margin-inline-start,
  me: margin-inline-end,
);

$margin-values: (
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  12,
  14,
  16,
  20,
  24,
  28,
  32,
  36,
  40,
  44,
  48,
  52,
  56,
  60,
  64,
  72,
  80,
  96,
  page
);
$margin-negative-values: (
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  12,
  14,
  16,
  20,
  24,
  28,
  32,
  36,
  40,
  44,
  48,
  52,
  56,
  60,
  64,
  72,
  80,
  96,
  page
);
$breakpoints: (
  "": "",
  sm: "--sm",
  md: "--md",
  lg: "--lg",
  xl: "--xl",
  xxl: "--xxl",
);

@mixin generate-margin-utilities {
  // Positive margins
  @each $dir, $prop in $margin-directions {
    @each $val in $margin-values {
      @each $bp, $mq in $breakpoints {
        $class: if($dir == "m", ".m-#{$val}", ".#{$dir}-#{$val}");
        $selector: $class;
        @if $bp == "" {
          #{$selector} {
            #{$prop}: var(--spacer-#{$val}) !important;
          }
        } @else {
          @media #{'(' + $mq + ')'} {
            #{$selector} {
              #{$prop}: var(--spacer-#{$val}) !important;
            }
          }
        }
      }
    }
  }
  // Negative margins
  @each $dir, $prop in $margin-directions {
    @each $val in $margin-negative-values {
      @each $bp, $mq in $breakpoints {
        $class: if($dir == "m", ".m-n#{$val}", ".#{$dir}-n#{$val}");
        $selector: $class;
        @if $bp == "" {
          #{$selector} {
            #{$prop}: calc(var(--spacer-#{$val}) * -1) !important;
          }
        } @else {
          @media #{'(' + $mq + ')'} {
            #{$selector} {
              #{$prop}: calc(var(--spacer-#{$val}) * -1) !important;
            }
          }
        }
      }
    }
  }
}

@include generate-margin-utilities;
