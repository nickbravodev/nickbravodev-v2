---
import { actions, isInputError } from "astro:actions";
// import TurnstileWidget from 'astro-turnstile:components/TurnstileWidget';

const result = Astro.getActionResult(actions.send);
if (result?.data) {
  return Astro.redirect("/success");
}

console.log(result?.data);

const inputErrors = isInputError(result?.error) ? result.error.fields : {};
---

  <!-- Contact section -->
    <section id="contact">
      <div class="contact-wrapper">
        <div>
          <!-- Contact text -->
          <h2>Get in touch.</h2>
          <div class="hr-div"></div>
          <p class="subheading">
            I'm ready to join your team! Send me a message if you think we'd be a great fit! 
          </p>
        </div>

        <!-- Contact form -->
        <div>
          <form action={actions.send} method="post">

            <div class="flex gap-2">
              <div>
                <label class="form-label sr-only" for="firstName">First Name</label>
                <input class="form-control" type="text" id="firstName" name="firstName" placeholder="First Name" required aria-describedby={inputErrors.firstName ? "firstName-error" : undefined} />
              </div>
            {
              inputErrors.firstName && (
                <p id="name-error">{inputErrors.firstName[0]}</p>
              )
            }
              <div>
                <label class="form-label sr-only" for="lastName">Last Name</label>
                <input class="form-control" type="text" id="lastName" name="lastName" placeholder="Last Name" required aria-describedby={inputErrors.lastName ? "lastName-error" : undefined} />
              </div>
            </div>
            {
              inputErrors.lastName && (
                <p id="name-error">{inputErrors.lastName[0]}</p>
              )
            }
            <div>
              <label class="form-label sr-only" for="email">Email</label>
              <input class="form-control" type="email" id="email" name="email" placeholder="Email" required aria-describedby={inputErrors.email ? "email-error" : undefined} />
            </div>
            {inputErrors.email && <p id="email-error">{inputErrors.email[0]}</p>}
            <div>
              <label class="form-label sr-only" for="description">Message</label>
              <textarea class="form-control" rows="3" id="description" name="message" placeholder="Type your message here" required aria-describedby={inputErrors.message ? "message-error" : undefined} ></textarea>
            </div>
            {inputErrors.message && <p id="message-error">{inputErrors.message[0]}</p>}
            <div class="cf-turnstile" data-sitekey={import.meta.env.TURNSTILE_SITE_KEY} data-size="" data-appearance="always"></div>
             <!-- <TurnstileWidget size="flexible" /> -->
            <div><button class="outline">Send message</button></div>
          </form>
        </div>
        
      </div>
    </section>


  <script is:inline src="https://challenges.cloudflare.com/turnstile/v0/api.js" defer></script>

<script is:inline>
  "use strict";

  // Form validation
  // (function () {
  //   const forms = document.querySelectorAll(".needs-validation");
  //   Array.from(forms).forEach(function (form) {
  //     form.addEventListener(
  //       "submit",
  //       function (event) {
  //         if (!form.checkValidity()) {
  //           event.preventDefault();
  //           event.stopPropagation();
  //         } else if (form.checkValidity() == true) {
  //           event.preventDefault();
  //           form.submit();
  //         }
  //         form.classList.add("was-validated");
  //       },
  //       false
  //     );
  //   });
  // })();

  const success = () => {
    if (window.location.href.indexOf("?_action=send") != -1) {
      window.location.href = "/success";
    }
  }

  success();
</script>

<style lang="scss">
  .contact-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    align-items: flex-start;
    justify-content: flex-start;
    gap: 3rem;
    margin-block-start: 8rem;
    
    @media screen and (min-width: 768px) {
      grid-template-columns: 1fr 1fr;
    }
    
    @media screen and (min-width: 992px) {
      grid-template-columns: 1fr 1fr;
      gap: 4rem;
    }
  }
</style>